#pragma once

#include "stdafx.h"

//DEFINE INTERFACE METHODS
class SensorContext;
class KN_DLL_CLASS CKinectWapper
{
public:
	CKinectWapper();
	~CKinectWapper();

public:
	//Nui Context Management
	// 初始化，并开启颜色，深度，骨骼
	static int NuiInitContext(bool useColor, bool useDepth, bool useSkeleton);

	// 开启或关闭背景去除。必须先NuiInitContext(true, true, true)
	static int NuiEnableBackgroundRemoved(bool bOpen);

	//开启用户信息，目前只有手势的grip(抓)， grip_release,另外通过手的坐标判断其他逻辑
	static int NuiEnableInteraction(bool bOpen);

	// 每次准备最新的数据
	static int NuiUpdate();

	// 释放设备流
	static void NuiUnInitContext();

	//Get Methods
	// 获取图片，返回byte数组及其大小
	static byte* NuiGetTextureImage(OUT int* size);

	// 获取景深数据，返回byte数组，每4个byte为一个像素的数据[playerIndex，depthValue]
	// 前两个byte指定playerIndex；
	// 后两个byte表示深度值depthValue，以毫米为单位
	static byte* NuiGetDepthImage(OUT int* size);

	// 去除背景图像大小，每个像素4个byte分别对应rgba，a为0，表示背景, size表示byte数组的长度
	static const byte* NuiGetBackgroundRemovedImage(OUT int* size);

	// 玩家骨骼中某个部位的坐标
	static void NuiGetSkeletonTransform(int player, int joint, OUT KVector4* c);
	static bool NuiGetUseInfo(int player, OUT KUseInfo* pLeftHand, OUT KUseInfo* pRightHand);

	// 图片大小
	static void NuiGetColorImageSize(int * width, int * height);
	// 景深数据的大小
	static void NuiGetDepthImageSize(int* width, int* height);

	// 取得骨架对应的id
	static int NuiTrackedIndex();
	// 是否检测到玩家
	static bool NuiExistPlayer();
	//
	static int NuiGetMainPlayerId();

	static void NuiGetCameraAngle(OUT float* angle);
	static bool NuiSetCameraAngle(int angle);


	static void NuiRunTest(bool useColor, bool useDepth, bool useSkeleton);
private:
	static SensorContext* m_pNuiContext;
	static SensorContext* Instance();
};

